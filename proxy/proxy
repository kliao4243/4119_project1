#! /usr/bin/env python
import sys
import select
import time
import re
from socket import socket, AF_INET, SOCK_STREAM
from thread import *

# Take arguments port number and ip addesses through sys.argv.

# Convert listen_port to Integer.
listen_port = int(sys.argv[1])
fake_ip = sys.argv[2]
server_ip = sys.argv[3]


def process_connection(connection, request):


    try:
        socket_outbound = socket(AF_INET, SOCK_STREAM)
        socket_outbound.bind((fake_ip, 0))
        socket_outbound.connect((server_ip, 8080))
        socket_outbound.send(request)

        while True:
            data = socket_outbound.recv(4096)
            if (len(data>0)):
                connection.send(data)
            else:
                break
        socket_outbound.close()
        connection.close()
    except Exception:
        socket_outbound.close()
        connection.close()
        sys.exit(1)

    print(request)


if __name__ == '__main__':
    try:
        # Create TCP socket. This socket is used to listen from clients.
        s = socket(AF_INET, SOCK_STREAM)
        s.bind(('', listen_port))
        # Allow at most 5 connection
        s.listen(5)
    except Exception:
        print "Fail to start proxy."
        sys.exit(1)


    ''' Call the proxy_listen function in a while loop, such that if client close the connection, the proxy can listen to another client, if the server shut down, the proxy
    can inform the client and continue working when the server recovers.'''
    while True:
        try:
            socket_listen, address = s.accept()
            request = socket_listen.recv(4096)
            if (len(request) > 0):   #to be checked
                start_new_thread(process_connection, (socket_listen, request))
            else:
                print "Connection to client was terminated."

        except KeyboardInterrupt:
            s.close()
            sys.exit(2)
    s.close()


